---
- name: Bootstrap development environment
  hosts: default

  tasks:
  - name: Add apt repositories
    become: true
    tags:
      - deps
      - gui
      - apt
    loop:
      - "ppa:papirus/papirus"
    apt_repository:
      repo: "{{ item }}"
      state: present

  - name: Install Visual Studio Code
    tags:
      - always
      - deps
      - gui
    include_role:
      name: gantsign.visual-studio-code
      apply:
        tags:
          - vscode

  - name: Install apt packages
    become: true
    tags:
      - deps
      - apt
    apt:
      name:
        - git
        - tig
        - tmux
        - fzf
        - stow
        - mutt
        - w3m
        - offlineimap
        - abook
        - ripgrep
        - fd-find
        - jq
        - shellcheck
        - htop
        - python3-pip
      state: present

  - name: Install deb packages
    become: true
    tags:
      - deps
      - apt
    loop:
      - https://github.com/gohugoio/hugo/releases/download/v0.88.1/hugo_0.88.1_Linux-64bit.deb
    apt:
      deb: "{{ item }}"
      state: present

  - name: Install apt GUI applications
    become: true
    tags:
      - deps
      - apt
      - gui
    apt:
      name:
        - scrot
        - sxiv
        - zathura
        - mpv
        - numlockx
        - peek
        - scrcpy
        - tlp
        - papirus-icon-theme
        - libx11-dev
        - libxext-dev
        - libxres-dev
        - acpi
        - lm-sensors
        - alsa-utils
        - sxhkd
        - awesome
      state: present

  - name: Install pip packages
    tags:
      - deps
      - pip
    pip:
      name:
        - pywal
        - ranger-fm
        - ueberzug
        - urlscan
        - flake8
        - black
        - yamllint
      state: present
      executable: pip3

  - name: Install node
    tags:
      - always
    include_role:
      name: geerlingguy.nodejs
      apply:
        become: true
        tags:
          - deps
          - node
    vars:
      nodejs_generate_etc_profile: false
      nodejs_version: "14.x"
      npm_config_prefix: "{{ ansible_env.HOME }}/.npm-packages"
      nodejs_npm_global_packages:
        - n
        - eslint_d
        - prettier
        - yalc
        - diff-so-fancy

  - name: Build neovim from source
    become: true
    tags:
      - deps
      - neovim
    vars:
      clone_path: "{{ ansible_env.HOME }}/src/neovim"
    block:
      - name: (Neovim) Install system dependencies
        apt:
          name:
            - ninja-build
            - gettext
            - libtool
            - libtool-bin
            - autoconf
            - automake
            - cmake
            - g++
            - pkg-config
            - unzip
            - curl
          state: present

      - name: (Neovim) Clone repository
        git:
          repo: https://github.com/neovim/neovim
          dest: "{{ clone_path }}"
          clone: true
          version: v0.5.1

      - name: (Neovim) Build release version
        community.general.make:
          chdir: "{{ clone_path }}"
          params:
            CMAKE_BUILD_TYPE: Release

      - name: (Neovim) Install release version
        community.general.make:
          chdir: "{{ clone_path }}"
          target: install

  - name: Initialize git submodules
    tags:
      - deps
      - submodules
    command: git submodule update --init --recursive --jobs 4

  - name: Build dunst from source
    become: true
    tags:
      - deps
      - dunst
    vars:
      clone_path: "{{ ansible_env.HOME }}/src/dunst"
    block:
      - name: (Dunst) Install system dependencies
        apt:
          name:
            - libdbus-1-dev
            - libx11-dev
            - libxinerama-dev
            - libxrandr-dev
            - libxss-dev
            - libglib2.0-dev
            - libpango1.0-dev
            - libgtk-3-dev
            - libxdg-basedir-dev
            - libnotify-dev
          state: present

      - name: (Dunst) Clone repository
        git:
          repo: https://github.com/dunst-project/dunst
          dest: "{{ clone_path }}"
          clone: true
          version: v1.6.1

      - name: (Dunst) Build
        community.general.make:
          chdir: "{{ clone_path }}"

      - name: (Dunst) Install
        community.general.make:
          chdir: "{{ clone_path }}"
          target: install

  - name: Run Stow
    tags:
      - stow
    # TODO: remove .bashrc and other files that may already exist
    block:
      - name: "(Stow) Prevent conflicts"
        command: "rm .bashrc"
        args:
          chdir: "{{ ansible_env.HOME }}"

      - name: "(Stow) Run"
        shell: "stow . --target {{ ansible_env.HOME }} --verbose=2"
        register: result
        changed_when: 'result.stderr is search("LINK: ")'

  - name: Run pywal
    tags:
      - pywal
    command: wal --theme custom-base16-railscasts -o .config/wal/done.sh

  - name: Build suckless tools
    tags:
      - suckless
    become: true
    become_flags: '--preserve-env=HOME'
    loop:
      - dmenu
      - dwm
      - slock
      - st
      - tabbed
    shell:
      cmd: make clean install
      chdir: "./suckless/{{ item }}"

  - name: Configure DWM X Session
    become: true
    tags:
      - dwm
      - gui
    template:
      src: templates/dwm.desktop.j2
      dest: /usr/share/xsessions/dwm.desktop

  - name: Configure awesome X Session
    become: true
    tags:
      - awesome
      - gui
    template:
      src: templates/awesome.desktop.j2
      dest: /usr/share/xsessions/awesome.desktop

  - name: Activate slock before sleep
    become: true
    tags:
      - slock
      - gui
    block:
      - name: Configure systemd service
        template:
          src: templates/slock@.service.j2
          dest: /etc/systemd/system/slock@.service

      - name: Activate systemd service for current user
        systemd:
          name: "slock@{{ ansible_env.USER }}"
          enabled: true

  - name: Create .local/share/fonts
    file:
      path: "{{ ansible_env.HOME }}/.local/share/fonts"
      state: directory
      mode: '0775'

  - name: Install Font Awesome
    tags:
      - fonts
      - deps
      - gui
    get_url:
      url: https://github.com/FortAwesome/Font-Awesome/blob/7d3d774145ac38663f6d1effc6def0334b68ab7e/otfs/Font%20Awesome%205%20Free-Solid-900.otf?raw=true
      dest: "{{ ansible_env.HOME }}/.local/share/fonts/Font Awesome 5 Free-Solid-900.otf"
      checksum: md5:8d531d92051cddac77556d0734b701f8

  - name: Install Source Code Pro
    tags:
      - fonts
      - deps
    get_url:
      url: https://github.com/adobe-fonts/source-code-pro/blob/29fdb884c6e9dc2a312f4a5e2bb3b2dad2350777/TTF/SourceCodePro-Semibold.ttf?raw=true
      dest: "{{ ansible_env.HOME }}/.local/share/fonts/SourceCodePro-Semibold.ttf"
      checksum: md5:0a182fd5b03b7bc3bbc99a57ae8d8a45

  - name: Update font cache
    tags:
      - fonts
    command: fc-cache -f

  - name: Install efm-langserver
    tags:
      - efm-langserver
      - deps
    unarchive:
      src: https://github.com/mattn/efm-langserver/releases/download/v0.0.37/efm-langserver_v0.0.37_linux_amd64.tar.gz
      dest: "{{ ansible_env.HOME }}/.local/bin"
      remote_src: true
      extra_opts:
        - "--strip-components=1"
        - "efm-langserver_v0.0.37_linux_amd64/efm-langserver"
