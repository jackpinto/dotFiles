---
- name: Bootstrap development environment
  hosts: default

  tasks:
  - name: Install Visual Studio Code
    tags:
      - always
      - deps
      - gui
    include_role:
      name: gantsign.visual-studio-code
      apply:
        tags:
          - vscode

  - name: Install apt packages
    become: true
    tags:
      - deps
      - apt
    apt:
      name:
        - git
        - tig
        - tmux
        - stow
        - mutt
        - w3m
        - offlineimap
        - abook
        - ripgrep
        - fd-find
        - jq
        - shellcheck
        - htop
        - python3-pip
      state: present

  - name: Install deb packages
    become: true
    tags:
      - deps
      - apt
    loop:
      - https://github.com/gohugoio/hugo/releases/download/v0.88.1/hugo_0.88.1_Linux-64bit.deb
    apt:
      deb: "{{ item }}"
      state: present

  - name: Install apt GUI applications
    become: true
    tags:
      - deps
      - apt
      - gui
    apt:
      name:
        - flameshot
        - sxiv
        - zathura
        - mpv
        - numlockx
        - peek
        - scrcpy
        - tlp
        - libx11-dev
        - libxext-dev
        - libxres-dev
        - sxhkd
        - ubuntu-mate-desktop
        - libimlib2-dev
      state: present

  - name: Install pip packages
    tags:
      - deps
      - pip
    pip:
      name:
        - pywal
        - ranger-fm
        - ueberzug
        - urlscan
        - flake8
        - black
        - yamllint
        - git+https://github.com/Vimjas/vint@master
      state: present
      executable: pip3

  - name: Install node
    tags:
      - always
    include_role:
      name: geerlingguy.nodejs
      apply:
        become: true
        tags:
          - deps
          - node
    vars:
      nodejs_generate_etc_profile: false
      nodejs_version: "14.x"
      npm_config_prefix: "{{ ansible_env.HOME }}/.npm-packages"
      nodejs_npm_global_packages:
        - n
        - eslint_d
        - prettier
        - diff-so-fancy
        - npm-merge-driver

  - name: Install fzf
    tags:
      - deps
      - fzf
    vars:
      clone_path: "{{ ansible_env.HOME }}/src/fzf"
    block:
      - name: (fzf) Clone fzf repository
        git:
          repo: https://github.com/junegunn/fzf
          dest: "{{ clone_path }}"
          clone: true

      - name: (fzf) Run install script
        command: "./install"
        args:
          chdir: "{{ clone_path }}"

  - name: Build neovim from source
    become: true
    tags:
      - deps
      - neovim
    vars:
      clone_path: "{{ ansible_env.HOME }}/src/neovim"
    block:
      - name: (Neovim) Install system dependencies
        apt:
          name:
            - ninja-build
            - gettext
            - libtool
            - libtool-bin
            - autoconf
            - automake
            - cmake
            - g++
            - pkg-config
            - unzip
            - curl
          state: present

      - name: (Neovim) Clone repository
        git:
          repo: https://github.com/neovim/neovim
          dest: "{{ clone_path }}"
          clone: true
          version: v0.5.1

      - name: (Neovim) Build release version
        community.general.make:
          chdir: "{{ clone_path }}"
          params:
            CMAKE_BUILD_TYPE: Release

      - name: (Neovim) Install release version
        community.general.make:
          chdir: "{{ clone_path }}"
          target: install

  - name: Initialize git submodules
    tags:
      - deps
      - submodules
    command: git submodule update --init --recursive --jobs 4

  - name: Run Stow
    tags:
      - stow
    block:
      - name: (Stow) Prevent conflicts
        command: "rm {{ ansible_env.HOME }}/.bashrc"
        args:
          chdir: "{{ ansible_env.HOME }}"

      - name: (Stow) Run
        shell: "stow . --target {{ ansible_env.HOME }} --verbose=2"
        register: result
        changed_when: 'result.stderr is search("LINK: ")'

  - name: Run pywal
    tags:
      - pywal
    command: wal --theme base16-oceanicnext -o .config/wal/done.sh

  - name: Ensure $HOME/.local/share/fonts exists
    tags:
      - fonts
      - deps
    file:
      path: "{{ ansible_env.HOME }}/.local/share/fonts"
      state: directory

  - name: Install Sauce Code Pro
    tags:
      - fonts
      - deps
    get_url:
      url: https://github.com/ryanoasis/nerd-fonts/blob/ab6fa3c562c552750dce08e638f1213d67b5b05c/patched-fonts/SourceCodePro/Medium/complete/Sauce%20Code%20Pro%20Medium%20Nerd%20Font%20Complete.ttf?raw=true
      dest: "{{ ansible_env.HOME }}/.local/share/fonts/Sauce Code Pro Medium Nerd Font Complete.ttf"

  - name: Update font cache
    tags:
      - fonts
    command: fc-cache -f
    changed_when: false

  - name: Build suckless tools
    tags:
      - suckless
    become: true
    become_flags: "--preserve-env=HOME"
    loop:
      - dmenu
      - st
    shell:
      cmd: make clean install
      chdir: "./suckless/{{ item }}"

  - name: Create .local/share/fonts
    file:
      path: "{{ ansible_env.HOME }}/.local/share/fonts"
      state: directory
      mode: "0775"

  - name: Install efm-langserver
    tags:
      - efm-langserver
      - deps
    unarchive:
      src: https://github.com/mattn/efm-langserver/releases/download/v0.0.37/efm-langserver_v0.0.37_linux_amd64.tar.gz
      dest: "{{ ansible_env.HOME }}/.local/bin"
      remote_src: true
      extra_opts:
        - "--strip-components=1"
        - "efm-langserver_v0.0.37_linux_amd64/efm-langserver"

  - name: Enable systemd services
    tags:
      - systemd
      - gui
    loop:
      - redshift
      - ssh-agent
      - offlineimap
      - numlockx
      - sxhkd
    systemd:
      name: "{{ item }}"
      state: started
      scope: user

  - name: Configure Ubuntu MATE
    tags:
      - mate
      - gui
    block:
      # See this issue
      # https://ubuntu-mate.community/t/menu-icons-not-found-on-fresh-new-install-20-04/21579/32.
      # Remove once it's resolved
      - name: Fix broken icons in brazilian portuguese locale
        become: true
        shell: |
          sed -i "/Icon\[/d" /usr/share/applications/*.desktop
          sed -i "/Icon\[/d" /usr/share/mate/desktop-directories/*.directory
          update-desktop-database

      - name: Restore general Marco Window Manager configuration
        loop:
          - {key: action-double-click-titlebar, value: "'toggle_maximize'"}
          - {key: allow-tiling, value: "false"}
          - {key: auto-raise-delay, value: 500}
          - {key: button-layout, value: "'close,minimize,maximize:'"}
          - {key: num-workspaces, value: 4}
          - {key: theme, value: "'Ambiant-MATE'"}
        community.general.dconf:
          key: "/org/mate/marco/general/{{ item.key }}"
          value: "{{ item.value }}"
          state: present

      - name: Restore mate-panel general configuration
        loop:
          - {key: default-layout, value: "'familiar'"}
          - {key: object-id-list, value: ['object-1', 'object-2', 'object-4', 'object-3']}
          - {key: toplevel-id-list, value: ['toplevel-0']}
        community.general.dconf:
          key: "/org/mate/panel/general/{{ item.key }}"
          value: "{{ item.value }}"

      - name: Restore mate-panel configuration
        loop:
          - {key: auto-hide, value: "false"}
          - {key: expand, value: "true"}
          - {key: monitor, value: 0}
          - {key: orientation, value: "'bottom'"}
          - {key: screen, value: 0}
          - {key: x, value: 0}
          - {key: x-centered, value: "false"}
          - {key: x-right, value: -1}
          - {key: y, value: 744}
          - {key: y-bottom, value: 0}
        community.general.dconf:
          key: "/org/mate/panel/toplevels/toplevel-0/{{ item.key }}"
          value: "{{ item.value }}"
          state: present

      - name: Restore mate-panel objects
        loop:
          - {key: object-1/applet-iid, value: "'BriskMenuFactory::BriskMenu'"}
          - {key: object-1/object-type, value: "'applet'"}
          - {key: object-1/panel-right-stick, value: "false"}
          - {key: object-1/position, value: "0"}
          - {key: object-1/toplevel-id, value: "'toplevel-0'"}
          - {key: object-2/applet-iid, value: "'WnckletFactory::WindowListApplet'"}
          - {key: object-2/object-type, value: "'applet'"}
          - {key: object-2/panel-right-stick, value: "false"}
          - {key: object-2/position, value: "80"}
          - {key: object-2/toplevel-id, value: "'toplevel-0'"}
          - {key: object-3/applet-iid, value: "'WnckletFactory::WorkspaceSwitcherApplet'"}
          - {key: object-3/object-type, value: "'applet'"}
          - {key: object-3/panel-right-stick, value: "false"}
          - {key: object-3/position, value: "963"}
          - {key: object-3/toplevel-id, value: "'toplevel-0'"}
          - {key: object-3/prefs/display-all-workspaces, value: "true"}
          - {key: object-3/prefs/display-workspace-names, value: "false"}
          - {key: object-3/prefs/num-rows, value: "1"}
          - {key: object-3/prefs/wrap-workspaces, value: "false"}
          - {key: object-4/applet-iid, value: "'IndicatorAppletCompleteFactory::IndicatorAppletComplete'"}
          - {key: object-4/object-type, value: "'applet'"}
          - {key: object-4/panel-right-stick, value: "true"}
          - {key: object-4/position, value: "230"}
          - {key: object-4/toplevel-id, value: "'toplevel-0'"}
        community.general.dconf:
          key: "/org/mate/panel/toplevels/toplevel-0/objects/{{ item.key }}"
          value: "{{ item.value }}"
          state: present

      - name: Restore global keybindings
        loop:
          - {key: run-command-terminal, value: "'<Shift><Mod4>Return'"}
          - {key: switch-to-workspace-1, value: "'<Mod4>1'"}
          - {key: switch-to-workspace-2, value: "'<Mod4>2'"}
          - {key: switch-to-workspace-3, value: "'<Mod4>3'"}
          - {key: switch-to-workspace-4, value: "'<Mod4>4'"}
          - {key: switch-to-workspace-down, value: "'<Primary><Mod4>Down'"}
          - {key: switch-to-workspace-left, value: "'<Primary><Mod4>Left'"}
          - {key: switch-to-workspace-right, value: "'<Primary><Mod4>Right'"}
          - {key: switch-to-workspace-up, value: "'<Primary><Mod4>Up'"}
          - {key: switch-to-workspace-prev, value: "'<Mod4>Tab'"}
        community.general.dconf:
          key: "/org/mate/marco/global-keybindings/{{ item.key }}"
          value: "{{ item.value }}"

      - name: Restore window keybindings
        loop:
          - {key: move-to-workspace-1, value: "'<Shift><Mod4>exclam'"}
          - {key: move-to-workspace-2, value: "'<Shift><Mod4>at'"}
          - {key: move-to-workspace-3, value: "'<Shift><Mod4>numbersign'"}
          - {key: move-to-workspace-4, value: "'<Shift><Mod4>dollar'"}
        community.general.dconf:
          key: "/org/mate/marco/window-keybindings/{{ item.key }}"
          value: "{{ item.value }}"

      - name: Use st as default terminal application
        command: gsettings set org.mate.applications-terminal exec st

      - name: Restore keybinding to open browser
        community.general.dconf:
          key: /org/mate/settings-daemon/plugins/media-keys/www
          value: "'<Mod4>w'"

      - name: Do not show clock seconds
        command: gsettings set org.gnome.desktop.interface clock-show-seconds false

  - name: Use Flameshot as Print Screen program in Ubuntu MATE
    tags:
      - mate
      - flameshot
      - gui
    block:
      - name: Remove default Print screen binding
        community.general.dconf:
          key: /org/mate/marco/global-keybindings/run-command-screenshot
          value: "'disabled'"

      - name: Configure custom keybinding for Print
        loop:
          - key: binding
            value: "'Print'"
          - key: name
            value: "'Flameshot Fullscreen'"
          - key: action
            value: "'/usr/bin/flameshot full --clipboard --path $HOME/Imagens/screenshots'"
        community.general.dconf:
          key: "/org/mate/desktop/keybindings/custom0/{{ item.key }}"
          value: "{{ item.value }}"

      - name: Configure custom keybinding for Ctrl+Print
        loop:
          - key: binding
            value: "'<Primary>Print'"
          - key: name
            value: "'Flameshot GUI'"
          - key: action
            value: "'/usr/bin/flameshot gui --path $HOME/Imagens/screenshots'"
        community.general.dconf:
          key: "/org/mate/desktop/keybindings/custom1/{{ item.key }}"
          value: "{{ item.value }}"
